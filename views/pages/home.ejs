<link rel="stylesheet" href="/css/custom.css">

<!--begin::App Main-->
<main class="content">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="row">
                <!-- 첫 번째 카드: 참여 중인 프로젝트 수 -->
                <div class="col-lg-3 col-6">
                    <div class="small-box text-bg-primary">
                        <div class="inner">
                            <h3><%= projectCount %><sup class="fs-5">건</sup></h3>
                            <p>My Project</p>
                        </div>
                        <i class="small-box-icon fa-solid fa-bars-progress"></i>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover more-info" data-type="projects">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>

                <!-- 두 번째 카드: 미완료 태스크 수 -->
                <div class="col-lg-3 col-6">
                    <div class="small-box text-bg-success">
                        <div class="inner">
                            <h3><%= incompleteTaskCount %><sup class="fs-5">개</sup></h3>
                            <p>Task</p>
                        </div>
                        <i class="small-box-icon fa-solid fa-list"></i>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover more-info" data-type="tasks">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>

                <!-- 세 번째 카드: 미완료 이슈 수 -->
                <div class="col-lg-3 col-6">
                    <div class="small-box text-bg-warning">
                        <div class="inner">
                            <h3><%= openIssueCount %><sup class="fs-5">건</sup></h3>
                            <p>Issue</p>
                        </div>
                        <i class="small-box-icon fas fa-hammer"></i>
                        <a href="#" class="small-box-footer link-dark link-underline-opacity-0 link-underline-opacity-50-hover more-info" data-type="issues">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>

                <!-- 네 번째 카드: 지연 데이터 -->
                <div class="col-lg-3 col-6">
                    <div class="small-box text-bg-danger">
                        <div class="inner">
                            <h3><%= delayCount %></h3>
                            <p>Delay</p>
                        </div>
                        <i class="fa-solid fa-hourglass-half small-box-icon"></i>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover more-info" data-type="delays">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
            </div>

            <!-- 새로운 결과 표시 영역 -->
            <div class="row mt-4">
                <div class="col-12">
                    <div id="dashboard-details" class="details-container">
                        <h4 id="details-title">상세 정보</h4>
                        <div id="details-content" class="table-responsive"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!--end::App Main-->

<!-- jQuery 추가 -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap JS는 index.ejs에서 로드되므로 제거 -->
<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script> -->

<!-- JavaScript 추가 -->
<script>
    $(document).ready(function () {
        $('.more-info').click(function (e) {
            e.preventDefault();
            const type = $(this).data('type');
            loadDetails(type);
        });

        function loadDetails(type) {
            $.ajax({
                url: `/dashboard/details/${type}`,
                method: 'GET',
                success: function (data) {
                    displayDetails(type, data);
                },
                error: function (xhr, status, error) {
                    console.error(`Error fetching ${type} details:`, error);
                    $('#details-title').html('<i class="fas fa-exclamation-triangle me-2"></i> 오류');
                    $('#details-content').html('<p class="text-danger">데이터를 불러오는 중 오류가 발생했습니다.</p>');
                }
            });
        }

        function displayDetails(type, data) {
            let title = '';
            let content = '';

            switch (type) {
                case 'projects':
                    title = '<i class="fas fa-bars-progress me-2"></i> 참여 중인 프로젝트';
                    content = createTable(data, ['pjt_name'], ['프로젝트명'], 'projects-table');
                    break;

                case 'tasks':
                    title = '<i class="fas fa-list me-2"></i> 미완료 태스크';
                    content = createGroupedTable(data, 'pjt_name', ['task', 'progress'], ['태스크', '진행률'], 'tasks-table');
                    break;

                case 'issues':
                    title = '<i class="fas fa-hammer me-2"></i> 미완료 이슈';
                    content = createTable(data, ['title', 'status'], ['이슈 제목', '상태'], 'issues-table');
                    break;

                case 'delays':
                    title = '<i class="fas fa-hourglass-half me-2"></i> 지연 데이터';
                    content = createGroupedTable(data, 'pjt_name', ['task', 'end_date'], ['태스크', '완료예정일'], 'delays-table');
                    break;

                default:
                    title = '<i class="fas fa-info-circle me-2"></i> 상세 정보';
                    content = '<p class="text-muted">데이터 없음</p>';
            }

            $('#details-title').html(title);
            $('#details-content').html(content);
        }

        function createTable(data, columns, headers, tableClass) {
            if (!data || data.length === 0) return '<p class="text-muted">데이터 없음</p>';

            let html = `<table class="table table-striped table-hover ${tableClass}">`;
            html += '<thead><tr>';
            headers.forEach((header, index) => {
                // 열에 클래스 추가 (예: 첫 번째 열은 col-main, 두 번째 열은 col-secondary)
                const colClass = index === 0 ? 'col-main' : 'col-secondary';
                html += `<th class="${colClass}">${header}</th>`;
            });
            html += '</tr></thead><tbody>';

            data.forEach(item => {
                html += '<tr>';
                columns.forEach((col, index) => {
                    const colClass = index === 0 ? 'col-main' : 'col-secondary';
                    html += `<td class="${colClass}">${item[col] || 'N/A'}</td>`;
                });
                html += '</tr>';
            });

            html += '</tbody></table>';
            return html;
        }

        function createGroupedTable(data, groupKey, columns, headers, tableClass) {
            if (!data || data.length === 0) return '<p class="text-muted">데이터 없음</p>';

            const grouped = {};
            data.forEach(item => {
                const groupName = item[groupKey] || '알 수 없는 프로젝트';
                if (!grouped[groupName]) {
                    grouped[groupName] = [];
                }
                grouped[groupName].push(item);
            });

            let html = '';
            for (const [groupName, items] of Object.entries(grouped)) {
                html += `<h5 class="mt-3">${groupName}</h5>`;
                html += `<table class="table table-striped table-hover ${tableClass}">`;
                html += '<thead><tr>';
                headers.forEach((header, index) => {
                    const colClass = index === 0 ? 'col-main' : 'col-secondary';
                    html += `<th class="${colClass}">${header}</th>`;
                });
                html += '</tr></thead><tbody>';

                items.forEach(item => {
                    html += '<tr>';
                    columns.forEach((col, index) => {
                        const colClass = index === 0 ? 'col-main' : 'col-secondary';
                        html += `<td class="${colClass}">${item[col] || 'N/A'}</td>`;
                    });
                    html += '</tr>';
                });

                html += '</tbody></table>';
            }
            return html;
        }
    });
</script>

<style>
    .details-container {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        min-height: 200px;
    }

    .details-container h4 {
        margin-bottom: 20px;
        color: #333;
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .details-container h5 {
        margin-top: 20px;
        margin-bottom: 10px;
        color: #007bff;
        font-weight: 500;
    }

    .table {
        font-size: 0.9rem;
        margin-bottom: 0;
        width: 100%; /* 테이블 너비 100%로 설정 */
        table-layout: fixed; /* 열 너비를 고정 */
    }

    .table th,
    .table td {
        vertical-align: middle;
        color: #333;
        overflow: hidden; /* 텍스트가 넘칠 경우 숨김 */
        text-overflow: ellipsis; /* 넘치는 텍스트를 ...으로 표시 */
        white-space: nowrap; /* 텍스트 줄바꿈 방지 */
    }

    /* 열 너비 설정 */
    .projects-table .col-main,
    .issues-table .col-main,
    .tasks-table .col-main,
    .delays-table .col-main {
        width: 80%; /* projects-table과 issues-table의 첫 번째 열 (프로젝트명, 이슈 제목) */
    }

    .tasks-table .col-main,
    .delays-table .col-main {
        width: 80%; /* tasks-table과 delays-table의 첫 번째 열 (태스크) */
    }

    .issues-table .col-secondary,
    .tasks-table .col-secondary,
    .delays-table .col-secondary {
        width: 20%; /* 진행률, 완료예정일, 상태 열을 20%로 설정 */
    }

    .table th {
        background-color: #f8f9fa;
        color: #495057;
        font-weight: 600;
        border-bottom: 2px solid #dee2e6;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
    }

    .table-responsive {
        max-height: 400px;
        overflow-y: auto;
    }
</style>