<link rel="stylesheet" href="/css/custom.css">
<style>
    .textarea-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 10px;
    }

    .output-container {
        margin-top: 10px;
    }

    pre {
        background: #f4f4f4;
        padding: 10px;
        border-radius: 5px;
        flex: 1;
    }

    .split-output-container {
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .split-textarea-group {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }
</style>

<!--begin::App Main-->
<main class="content">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="container custom-container">
                <i class="fas fa-share-from-square me-1" style="cursor: pointer;"></i>추출하고자 하는 라인에 포함된 값으로 필터링<br>
                <div class="textarea-container">
                    <textarea id="inputText" class="form-control" rows="10"
                        placeholder="여기에 ASA 방화벽 정책 로그를 입력하세요"></textarea>
                    <input type="text" id="keyword" class="form-control" placeholder="필터링할 키워드 입력">
                    예시) access-list , route 
                    <button class="btn btn-sm btn-primary" onclick="extractFilteredObjects()">추출</button>
                </div>

                <div class="output-container">
                    <p>추출된 건수: <span id="count">0</span></p>
                    <textarea id="output" class="form-control" rows="10" readonly></textarea>
                </div>

                <div class="split-output-container">
                    <p>분리된 값:</p>
                    <div id="splitOutput" class="split-textarea-group"></div>
                </div>
            </div>
        </div>
    </div>
</main>
<!--end::App Main-->

<script>
    function extractFilteredObjects() {
        const inputText = document.getElementById("inputText").value;
        const keyword = document.getElementById("keyword").value.toLowerCase();

        const lines = inputText.split("\n");
        let extractedLines = [];

        // 필터링된 라인 추출
        for (let line of lines) {
            if (keyword && line.toLowerCase().includes(keyword)) {
                extractedLines.push(line);
            }
        }

        // 추출된 결과 표시
        document.getElementById("count").textContent = extractedLines.length;
        document.getElementById("output").value = extractedLines.join("\n");

        // 분리된 값 처리
        const splitOutputContainer = document.getElementById("splitOutput");
        splitOutputContainer.innerHTML = ""; // 기존 내용 초기화

        // 각 라인을 공백으로 분리하여 2D 배열로 저장
        const splitLines = extractedLines.map(line => line.split(/\s+/));

        // 최대 열 개수 계산
        const maxColumns = Math.max(...splitLines.map(line => line.length));

        // 각 열에 해당하는 값을 모아서 텍스트 에어리어에 표시
        for (let col = 0; col < maxColumns; col++) {
            const columnValues = splitLines.map(line => line[col] || "").filter(Boolean); // 빈 값 제외
            if (columnValues.length > 0) {
                const textarea = document.createElement("textarea");
                textarea.className = "form-control";
                textarea.rows = Math.max(columnValues.length, 1); // 최소 1줄
                textarea.value = columnValues.join("\n");
                textarea.readOnly = true;
                splitOutputContainer.appendChild(textarea);
            }
        }
    }
</script>